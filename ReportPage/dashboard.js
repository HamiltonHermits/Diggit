var showAllTenantButton = document.getElementById("allTenantReport");
var showAllPropertyButton = document.getElementById("allPropertyReport");

var leftTenantReport = document.getElementById("tenant-report-container");
var rightPropertyReport = document.getElementById("property-report-container");

///////////////////js ajax for listing tenants
$(document).ready(function () {
    // Function to load all properties
    function loadAllProperties() {
        $.ajax({
            url: 'tenantReport.php', // Change the URL to your PHP script
            type: 'GET',
            success: function (data) {
                // Assuming 'data' contains the HTML table rows generated by tenantReport.php
                $("#tenant-data-table").html(data);
            },
            error: function () {
                alert("An error occurred while fetching the report.");
            }
        });
    }

    // Function to search for specific tenants
    function searchTenantsByName(searchTerm) {
        $.ajax({
            url: 'tenantReport.php', // Change the URL to your PHP script
            type: 'GET',
            data: { search: searchTerm }, // Pass the search term as a parameter
            success: function (data) {
                // Assuming 'data' contains the HTML table rows generated by tenantReport.php
                $("#tenant-data-table").html(data);
            },
            error: function () {
                alert("An error occurred while fetching the report.");
            }
        });
    }

    // Click event for "Generate All Tenants" button
    $("#generateAllProperties").click(function () {
        loadAllProperties();
    });

    // Click event for "Generate search Tenants" button
    $("#generateSearchReport").click(function () {
        var searchTerm = $("#tenantSearchbar").val();
        searchTenantsByName(searchTerm);
    });
});

/////////////////////////////js for listing properties
// script.js
$(document).ready(function () {
    // Function to load all properties
    function loadAllProperties() {
        $.ajax({
            url: 'propertyReport.php', // Change the URL to your PHP script
            type: 'GET',
            success: function (data) {
                // Assuming 'data' contains the HTML table rows generated by propertyReport.php
                $("#property-report-text-container").html(data);
            },
            error: function () {
                alert("An error occurred while fetching the report.");
            }
        });
    }

    // Function to search for specific properties by name
    function searchPropertiesByName(searchTerm) {
        $.ajax({
            url: 'propertyReport.php', // Change the URL to your PHP script
            type: 'GET',
            data: { search: searchTerm }, // Pass the search term as a parameter
            success: function (data) {
                // Assuming 'data' contains the HTML table rows generated by propertyReport.php
                $("#property-report-text-container").html(data);
            },
            error: function () {
                alert("An error occurred while fetching the report.");
            }
        });
    }

    // Click event for "Generate Report" button
    $("#generatePropertyReport").click(function () {
        var searchTerm = $("#propertySearchbar").val();
        searchPropertiesByName(searchTerm);
    });

    // Click event for "List All Properties" button
    $("#allPropertyReport").click(function () {
        loadAllProperties();
    });
});


/////////////////////////////js for digs criteia report
// script.js
$(document).ready(function () {
    // Function to load all properties
    function loadPropertiesByCriteria(criteriaTerm, searchTerm) {
        $.ajax({
            url: 'criteriaReport.php', // Change the URL to your PHP script
            type: 'GET',
            data: { criteria: criteriaTerm, search: searchTerm},
            success: function (data) {
                // Assuming 'data' contains the HTML table rows generated by propertyReport.php
                $("#criteria-report-text-container").html(data);
            },
            error: function () {
                alert("An error occurred while fetching the report.");
            }
        });
    }

    // Click event for "Generate Report" button
    $("#generateCriteriaReport").click(function () {
        if ($("#criteria-dropdown").val() != 'null') {
            let criteria = $("#criteria-dropdown").val(); 
            let searchTerm = $("#criteria-searchbar").val();
            loadPropertiesByCriteria(criteria, searchTerm);     
        }
    });

});

const selectPlaceholder = document.getElementById('select-placeholder');
const criteriaDropdown = document.getElementById('criteria-dropdown');

// listen for criteria drop down button
document.getElementById('chooseCriteria').addEventListener('click', function(event) {
    selectPlaceholder.style.display = 'none';
    criteriaDropdown.style.display = 'block';
    console.log("clicked criteria btton");
});


////////////////////------- Google charts -------/////////////////////

$(document).ready(function () {
    // Function to load all properties
    function loadChart(chartType) {
        $.ajax({
            url: 'chartReports.php', // Change the URL to your PHP script
            type: 'GET',
            data: { chart: chartType },
            success: function (chartData) {
                const jsonData = JSON.parse(chartData);
                console.log(jsonData);

                var chartType = jsonData.chart_type;
                var data = jsonData.chartData;
                console.log(data);

                google.charts.load("current", {packages:['corechart']});
                google.charts.setOnLoadCallback(drawChart);

                function drawChart() {            
                    var chart;
                
                    switch (chartType) {
                        case 'overall-prop-rating-cc':
                            var chartData = new google.visualization.DataTable();
                            chartData.addColumn('string', 'Property Name');
                            chartData.addColumn('number', 'Overall Property Rating');
                        
                            for (var i = 0; i < data.length; i++) {
                                var prop_name = data[i].prop_name;
                                var overall_property_rating = parseInt(data[i].overall_property_rating);
                                console.log(prop_name, overall_property_rating);
                                chartData.addRow([prop_name, overall_property_rating]);
                            }
                        
                            var options = {
                                title: 'Overall Property Ratings', titleTextStyle: {color: 'white'},
                                width: "100%",
                                height: 300,
                                backgroundColor: '#E4E4E4',
                                hAxis: {title: 'Overall Property Rating', titleTextStyle: {color: 'white'}, textStyle: { color: 'white' }},
                                vAxis: {title: 'Property Name', titleTextStyle: {color: 'white'}, textStyle: { color: 'white' }},
                                colors: ['#3366CC', '#DC3912', '#FF9900', '#109618', '#990099', '#3B3EAC', '#0099C6'],
                                chartArea: {
                                    backgroundColor: {
                                      fill: '#29292c',
                                      fillOpacity: 1
                                    },
                                },
                                backgroundColor: {
                                    fill: '#29292c',
                                    fillOpacity: 1
                                },
                                legend: {
                                    textStyle: {
                                        color: 'white'
                                    }
                                },
                            },
       

                            chart = new google.visualization.BarChart(document.getElementById('chart-report-text-container'));
                            break;
                        case 'rating-distribution-bc':
                            var chartData = new google.visualization.DataTable();
                            chartData.addColumn('string', 'Rating');
                            chartData.addColumn('number', 'Frequency');
                            
                            var colors = [];
                            // Assuming 'data' is an array of objects as described
                            for (var i = 0; i < data.length; i++) {
                                var overall_property_rating = data[i].overall_property_rating;
                                var rating_count = parseInt(data[i].rating_count);
                                
                                chartData.addRow([overall_property_rating, rating_count]);
                            }

                            var options = {
                                title: 'Overall Rating Distribution', titleTextStyle: {color: 'white'},
                                width: "100%",
                                height: 300,
                                hAxis: {title: 'Rating', titleTextStyle: {color: 'white'}, textStyle: { color: 'white' }},
                                vAxis: {title: 'Frequency', titleTextStyle: {color: 'white'}, textStyle: { color: 'white' }},
                                colors: ['#FF5733', '#FFC300', '#3D6B37', '#3D6B90', '#8A3D6B'],
                                chartArea: {
                                    backgroundColor: {
                                      fill: '#29292c',
                                      fillOpacity: 1
                                    },
                                },
                                backgroundColor: {
                                    fill: '#29292c',
                                    fillOpacity: 1
                                },
                                legend: {
                                    textStyle: {
                                        color: 'white'
                                    }
                                },
                            };
                            
                            var chart = new google.visualization.ColumnChart(document.getElementById('chart-report-text-container'));
                            break;
                        case 'agent-overall-rating-bc':
                            var chartData = new google.visualization.DataTable();
                            chartData.addColumn('string', 'Agent Name');
                            chartData.addColumn('number', 'Overall Rating');
                        
                            for (var i = 0; i < data.length; i++) {
                                var agent_name = data[i].username;
                                var overall_agent_rating = parseInt(data[i].overall_tenant_rating);
                                console.log(agent_name, overall_agent_rating);
                                chartData.addRow([agent_name, overall_agent_rating]);
                            }
                        
                            var options = {
                                title: 'Agent Overall Ratings', titleTextStyle: {color: 'white'},
                                width: "100%",
                                height: 300,
                                hAxis: {title: 'Overall Rating', titleTextStyle: {color: 'white'}, textStyle: { color: 'white' }},
                                vAxis: {title: 'Agent Name', titleTextStyle: {color: 'white'}, textStyle: { color: 'white' }},
                                chartArea: {
                                    backgroundColor: {
                                      fill: '#29292c',
                                      fillOpacity: 1
                                    },
                                },
                                backgroundColor: {
                                    fill: '#29292c',
                                    fillOpacity: 1
                                },
                                legend: {
                                    textStyle: {
                                        color: 'white'
                                    }
                                },
                            };
                            chart = new google.visualization.BarChart(document.getElementById('chart-report-text-container'));
                            break;
                            
                        default:
                            console.log("No chart type selected");
                    }
                
                    chart.draw(chartData, options);
                }

              
            },  
            error: function () {
                alert("An error occurred while fetching the report.");
            }
        });
    }
    
    function generateRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    // Click event for "Generate Report" button
    $("#generateChartReport").click(function () {
        let chartOption = $("#chart-dropdown").val(); // Get the selected value
        console.log(chartOption);
        loadChart(chartOption);
    });
});



const chartSelectPlaceholder = document.getElementById('chart-select-placeholder');
const chartDropdown = document.getElementById('chart-dropdown');

// listen for criteria drop down button
document.getElementById('chooseChart').addEventListener('click', function(event) {
    chartSelectPlaceholder.style.display = 'none';
    chartDropdown.style.display = 'block';
    console.log("clicked criteria btton");
});




